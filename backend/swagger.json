{
    "openapi": "3.1.0",
    "info": {
        "title": "PurpleNote API Documentation",
        "description": "In this documentation you will be able to consult the API end-points and also test all available routes. Do not forget to register and carry out the authorization.",
        "contact": "adrieldebfirmino@gmail.com"
    },
    "version": "1.0.0",
    "servers": [
        {
            "url": "http://localhost:5000",
            "description": "Local Server"
        }
    ],
    "paths": {
        "/user/create": {
            "post": {
                "summary": "Create a new user",
                "description": "Route responsible for creating a new user",
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "examples": {
                                "Users": {
                                    "value": {
                                        "name": "Gabriel",
                                        "username": "Gabi",
                                        "email": "gabi@gmail.com",
                                        "password": "123456",
                                        "avatar": "https://imgur.com/ohXh2Cs"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Not Found"
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "summary": "Search all users",
                "description": "Route responsible for fetching all users",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/findById/{id}": {
            "get": {
                "summary": "Search user by id",
                "description": "Route responsible for searching for user by id",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "User ID",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/update/{id}": {
            "patch": {
                "summary": "Update user by id",
                "description": "Route responsible for editing the user by id",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "User ID",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "examples": {
                                "Users": {
                                    "value": {
                                        "name": "Gabriel"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "summary": "Login to PurpleNote",
                "description": "Route responsible for logging in a registered user",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "examples": {
                                "User": {
                                    "value": {
                                        "email": "wellissonfirmino@gmail.com",
                                        "password": "123456"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/post/create": {
            "post": {
                "summary": "Create a new post",
                "description": "Route responsible for creating a new Post",
                "tags": [
                    "Post"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            },
                            "examples": {
                                "Post": {
                                    "value": {
                                        "title": "ECMAScript 6",
                                        "body": "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schemma": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/post": {
            "get": {
                "summary": "Search all posts",
                "description": "Route responsible for fetching all posts",
                "tags": [
                    "Post"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Post"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/post/top": {
            "get": {
                "summary": "Search top post",
                "description": "Route responsible for fetching top posts",
                "tags": [
                    "Post"
                ],
                "responses": {
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schemma": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/post/search": {
            "get": {
                "summary": "Search posts by title",
                "description": "Route responsible for fetching the posts that match the title sent via query params",
                "tags": [
                    "Post"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "title",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Post"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/post/byUser": {
            "get": {
                "summary": "Search posts by user id",
                "description": "Route responsible for fetching posts by user id",
                "tags": [
                    "Post"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Post"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/post/byIdPost/{id}": {
            "get": {
                "summary": "Search post by id",
                "description": "Route responsible for fetching post by id",
                "tags": [
                    "Post"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Post ID",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schemma": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/post/update/{id}": {
            "patch": {
                "summary": "Update a post",
                "description": "Route responsible for updating a Post",
                "tags": [
                    "Post"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Post ID",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            },
                            "examples": {
                                "Post": {
                                    "value": {
                                        "title": "",
                                        "body": ""
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schemma": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/post/like/{id}/": {
            "patch": {
                "summary": "Like a post",
                "description": "Route responsible for liking a post",
                "tags": [
                    "Post"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Post ID",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/post/comment/{id}/": {
            "patch": {
                "summary": "Comment on a post",
                "description": "Route responsible for commenting on a post",
                "tags": [
                    "Post"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Post ID",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            },
                            "examples": {
                                "Comment": {
                                    "value": {
                                        "text": "Testing Comment"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/post/comment/{idPost}/{idComment}": {
            "patch": {
                "summary": "Delete a comment on a post",
                "description": "Route responsible for deleting a comment on a post",
                "tags": [
                    "Post"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "idPost",
                        "type": "string",
                        "description": "Post ID",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "idComment",
                        "type": "string",
                        "description": "Comment Id",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/post/delete/{id}/": {
            "delete": {
                "summary": "Delete a post",
                "description": "Route responsible for deleting a Post",
                "tags": [
                    "Post"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Post ID",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/song/create": {
            "post": {
                "summary": "Create a new Song",
                "description": "Route responsible for creating a new Song",
                "tags": [
                    "Song"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Song"
                            },
                            "examples": {
                                "Song": {
                                    "value": {
                                        "name": "Music Example",
                                        "image": "https://images.pexels.com/photos/2746823/pexels-photo-2746823.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
                                        "spotifyLink":"https://open.spotify.com/intl-pt/track/4B2kkxg3wKSTZw5JPaUtzQ?si=aa5626d7b1694fa1"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schemma": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/song/like": {
            "post": {
                "summary":"Like a Song",
                "description":"Route responsible for liking a song",
                "tags": [
                    "Song"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Song"
                            },
                            "examples": {
                                "Song": {
                                    "value": {
                                        "songId": "6621531e2ccd65c9ed028450"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found or already liked"
                    },
                    "201": {
                        "description": "The song received a Like",
                        "content": {
                            "application/json": {
                                "schemma": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Song"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/song/happyFeel": {
            "post": {
                "summary":"Give a Happy feel to a song",
                "description":"Route responsible for giving a Happy feel to a song",
                "tags": [
                    "Song"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Song"
                            },
                            "examples": {
                                "Song": {
                                    "value": {
                                        "songId": "6621531e2ccd65c9ed028450"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found or already received a Happy feel by you"
                    },
                    "200": {
                        "description": "The song received a Happy feel",
                        "content": {
                            "application/json": {
                                "schemma": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Song"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/song/sadFeel": {
            "post": {
                "summary":"Give a Sad feel to a song",
                "description":"Route responsible for giving a Sad feel to a song",
                "tags": [
                    "Song"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Song"
                            },
                            "examples": {
                                "Song": {
                                    "value": {
                                        "songId": "6621531e2ccd65c9ed028450"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found or already received a Sad feel by you"
                    },
                    "200": {
                        "description": "The song received a Sad feel",
                        "content": {
                            "application/json": {
                                "schemma": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Song"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/song/loveFeel": {
            "post": {
                "summary":"Give a Love feel to a song",
                "description":"Route responsible for giving a Love feel to a song",
                "tags": [
                    "Song"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Song"
                            },
                            "examples": {
                                "Song": {
                                    "value": {
                                        "songId": "6621531e2ccd65c9ed028450"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found or already received a Love feel by you"
                    },
                    "200": {
                        "description": "The song received a Love feel",
                        "content": {
                            "application/json": {
                                "schemma": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Song"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/song/relaxFeel": {
            "post": {
                "summary":"Give a Relax feel to a song",
                "description":"Route responsible for giving a Relax feel to a song",
                "tags": [
                    "Song"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Song"
                            },
                            "examples": {
                                "Song": {
                                    "value": {
                                        "songId": "6621531e2ccd65c9ed028450"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found or already received a Relax feel by you"
                    },
                    "200": {
                        "description": "The song received a Relax feel",
                        "content": {
                            "application/json": {
                                "schemma": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Song"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/song": {
            "get": {
                "summary": "Search all songs",
                "description": "Route responsible for fetching all songs",
                "tags": [
                    "Song"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Song"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/song/recent": {
            "get": {
                "summary": "Recent song",
                "description": "Route responsible for get the most recent song.",
                "tags": [
                    "Song"
                ],
                "responses": {
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schemma": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Song"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/song/byUser": {
            "get": {
                "summary": "Search songs by user id",
                "description": "Route responsible for fetching songs by user id",
                "tags": [
                    "Song"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Song"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/song/byIdSong/{id}": {
            "get": {
                "summary": "Search song by id",
                "description": "Route responsible for fetching song by id",
                "tags": [
                    "Song"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Song ID",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schemma": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Song"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/song/update/{id}": {
            "patch": {
                "summary": "Update a song",
                "description": "Route responsible for updating a Song",
                "tags": [
                    "Song"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Song ID",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Song"
                            },
                            "examples": {
                                "Song": {
                                    "value": {
                                        "name": "",
                                        "image": "",
                                        "spotifyLink": ""
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schemma": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/song/like/{id}": {
            "delete": {
                "summary": "Dislike a song",
                "description": "Route responsible for disliking a song",
                "tags": [
                    "Song"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Song ID",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/song/delete/{id}/": {
            "delete": {
                "summary": "Delete a song",
                "description": "Route responsible for deleting a Song",
                "tags": [
                    "Song"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Song ID",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/song/happyFeel/{id}/": {
            "delete": {
                "summary": "Delete a Happy Feel",
                "description": "Route responsible for deleting a Happy Feel of a Song",
                "tags": [
                    "Song"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Song ID",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/song/sadFeel/{id}/": {
            "delete": {
                "summary": "Delete a Sad Feel",
                "description": "Route responsible for deleting a Sad Feel of a Song",
                "tags": [
                    "Song"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Song ID",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/song/loveFeel/{id}/": {
            "delete": {
                "summary": "Delete a Love Feel",
                "description": "Route responsible for deleting a Love Feel of a Song",
                "tags": [
                    "Song"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Song ID",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/song/relaxFeel/{id}/": {
            "delete": {
                "summary": "Delete a Relax Feel",
                "description": "Route responsible for deleting a Relax Feel of a Song",
                "tags": [
                    "Song"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Song ID",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string"
                    }
                }
            },
            "Post": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "object"
                    },
                    "title": {
                        "type": "string"
                    },
                    "body": {
                        "type": "string"
                    },
                    "likes": {
                        "type": "array"
                    },
                    "comments": {
                        "type": "array"
                    },
                    "createdAt": {
                        "type": "date"
                    }
                }
            },
            "Comment": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Song": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "String"
                    },
                    "image": {
                        "type": "string"
                    },
                    "author": {
                        "type": "object"
                    },
                    "happyFeel": {
                        "type": "array"
                    },
                    "happyCount": {
                        "type": "number"
                    },
                    "sadFeel": {
                        "type": "array"
                    },
                    "sadCount": {
                        "type": "number"
                    },
                    "loveFeel": {
                        "type": "array"
                    },
                    "loveCount": {
                        "type": "number"
                    },
                    "relaxFeel": {
                        "type": "array"
                    },
                    "relaxCount": {
                        "type": "number"
                    },
                    "likes": {
                        "type": "array"
                    },
                    "likesCount": {
                        "type": "number"
                    },
                    "spotifyLink": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "date"
                    }
                }
            }
        }
    }
}